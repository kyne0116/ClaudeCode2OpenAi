[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-proxy-service"
version = "1.0.0"
description = "支持多后端AI服务的统一接口代理"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [
    { name = "AI Proxy Service Team" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["ai", "proxy", "openai", "claude", "gemini", "fastapi", "api"]

dependencies = [
    "fastapi>=0.95.0",
    "uvicorn[standard]>=0.18.0",
    "httpx>=0.24.0",
    "pydantic>=1.10.0",
    "pyyaml>=6.0",
    "python-multipart>=0.0.5",
]

[project.optional-dependencies]
monitoring = [
    "prometheus-client>=0.15.0",
    "structlog>=22.0.0",
]
web = [
    "jinja2>=3.1.0",
    "python-multipart>=0.0.6",
]

[project.urls]
Homepage = "https://github.com/ai-proxy-service/ai-proxy"
Repository = "https://github.com/ai-proxy-service/ai-proxy.git"
Documentation = "https://github.com/ai-proxy-service/ai-proxy#readme"
"Bug Tracker" = "https://github.com/ai-proxy-service/ai-proxy/issues"

[project.scripts]
ai-proxy = "main:main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/config.yaml",
    "/main.py",
    "/start.sh",
    "/README.md",
]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
src_paths = ["src", "main.py"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "yaml.*",
    "uvicorn.*",
    "httpx.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
per-file-ignores = [
    "__init__.py:F401",  # imported but unused
]

[tool.uv.workspace]
members = []

[dependency-groups]
dev = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.20.0", 
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.990",
    "pre-commit>=2.20.0",
]